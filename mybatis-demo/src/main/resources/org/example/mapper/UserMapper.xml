<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="org.example.entities.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="is_delete" jdbcType="BOOLEAN" property="isDelete"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
    </resultMap>



    <sql id="Base_Column_List">
        id,
        `name`,
        age,
        email,
        is_delete,
        create_time,
        update_time,
        version
    </sql>


    <!--
    sql查询结果返回的数据库对象所对应的java实体类需要通过resultType或resultMap进行设置
    resultType：设置默认的映射关系，字段名和属性名一致时使用resultType
    resultMap：设置自定义的映射关系，字段名和属性名不一致或一对多的情况下使用resultMap-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from `user`
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="org.example.entities.User">
        insert into `user` (id, `name`, age,
                            email, is_delete, create_time,
                            update_time, version)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
                #{email,jdbcType=VARCHAR}, #{isDelete,jdbcType=BOOLEAN}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
    </insert>


    <insert id="insertSelective" parameterType="org.example.entities.User">
        insert into `user`
        <!--
        trim标签是where标签和set标签的泛化标签，功能更加强大
        where标签：prefix="WHERE" prefixOverrides="AND | OR"
        set标签：prefix="SET" suffixOverrides=","

        1. 当trim标签中的子标签有内容返回时，才会添加上prefix和suffix中的内容
        2. 除prefix和suffix外的内容中，如果前缀和后缀分别为prefixOverrides和suffixOverrides，那么这个字符会被删除。防止无意义的首尾出现无意义的关键字或符号。
        -->
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.entities.User">
        update `user`
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.entities.User">
        update `user`
        set `name`      = #{name,jdbcType=VARCHAR},
            age         = #{age,jdbcType=INTEGER},
            email       = #{email,jdbcType=VARCHAR},
            is_delete   = #{isDelete,jdbcType=BOOLEAN},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            version     = #{version,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByNameAndAge" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        <!--这里的xxx和yyy是通过接口方法中设置的@Param注解来获得的,
        默认情况下Java字节码中不会保存形参名, 因此无法获取方法的形参名所以需要手动添加注解进行设置
        但是, 如果可以解决形参名无法获取的问题, 那么也能够解决这个问题, 使用 -parameters 命令行编译参数. 但是使用这种方式会在Mapper.xml文件中无法提示(会报错,但实际没有影响)
        -->
        where name = #{xxx}
          and age = #{yyy}
    </select>

    <select id="selectByAge" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where age = #{age};
    </select>


    <select id="selectByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where name like '%${name}%'
    </select>
</mapper>